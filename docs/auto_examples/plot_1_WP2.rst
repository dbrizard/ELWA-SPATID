
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_1_WP2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_1_WP2.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_1_WP2.py:


Test :class:`WP2` class
=======================

Define a :class:`BarSet` bar configuration and use it with :class:`WP2` to compute
elastic wave propagation in simple test cases.

.. GENERATED FROM PYTHON SOURCE LINES 10-15

.. code-block:: default


    import numpy as np
    from elwaspatid import WP2, BarSet









.. GENERATED FROM PYTHON SOURCE LINES 16-17

Define a few parameters

.. GENERATED FROM PYTHON SOURCE LINES 17-23

.. code-block:: default

    E = 201e9  # Young modulus [Pa]
    rho = 7800  # Density [kg/m3]
    d = 0.020  # diameter [m]
    k = 2.4  # diameters ratio [-]









.. GENERATED FROM PYTHON SOURCE LINES 24-25

Create the bar configurations: two bars in contact.

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: default

    nm = 15
    bc = BarSet([E, E], [rho, rho], [.1, .13], [d, d], nmin=nm)  # same section
    bc2 = BarSet([E, E], [rho, rho], [.1, .13], [d, k*d], nmin=nm)  # section increase
    bc3 = BarSet([E, E], [rho, rho], [.1, .13], [k*d, d], nmin=nm)  # section reduction
    bc4 = BarSet([E, E], [rho, rho], [.1, .3], [d, d], nmin=nm)  # same section








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Define the incident wave vector

.. GENERATED FROM PYTHON SOURCE LINES 33-38

.. code-block:: default

    comp = np.zeros(20)  # incident wave
    #comp[0:20] = -1e3  # heavyside, compression (<0)
    comp[0:7] = -2e3
    comp[15:] = -1e3








.. GENERATED FROM PYTHON SOURCE LINES 39-49

Two identical bars, free-ends
-----------------------------
Contact interface between the two bars: 

1. compression pulses cross the interface,
2. are reflected as traction pulses on the free end (right), 
3. and traction is then reflected as compression on the contact interface,
   as if this was a free end.

And so on. Which means the pulse is trapped in the second bar.

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default

    test2 = WP2(bc, comp, nstep=100, left='free', right='free')
    test2.plot('2b_free')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_001.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_002.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_003.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_003.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 53-55

Two identical bars, free and fixed ends
---------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: default

    test2 = WP2(bc, comp, nstep=100, left='free', right='fixed')
    test2.plot('2b_freefixed')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_004.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_005.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_006.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_006.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 59-64

Two different bars, infinite-ends
---------------------------------
Compression pulses cross the interface and are partly reflected because of the 
difference of impedance between the bars. At both end, no reflection occur 
since infinite ends amounts to anechoic condition.

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: default

    test2f = WP2(bc3, comp, nstep=100, left='infinite', right='infinite')
    test2f.plot('2b_anech')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_007.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_008.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_009.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_009.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 68-72

Two identical bars with traction pulse
--------------------------------------
The traction pulses do not cross the contact interface. The pulse is trapped 
in the firt bar.

.. GENERATED FROM PYTHON SOURCE LINES 72-75

.. code-block:: default

    test2t = WP2(bc, -comp, nstep=100, left='free', right='free')
    test2t.plot('2b_trac')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_010.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_011.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_012.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_012.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 76-80

Two bars, cross-section increase
--------------------------------
Compression is reflected as traction. 
Recall that the limit case of cross-section increase is the fixed end.

.. GENERATED FROM PYTHON SOURCE LINES 80-85

.. code-block:: default

    test2a = WP2(bc2, comp, nstep=100, left='free', right='free')
    test2a.plot('2b_incre')
    # test2av = WP2(bc2, comp, nstep=100, left='free', right='free', Vinit=10)
    # test2av.plot('2baugmv')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_013.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_013.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_014.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_015.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_015.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 86-90

Two bars, cross-section reduction
---------------------------------
Compression is reflected as compression
Recall that the limit case of cross-section reduction is the free end.

.. GENERATED FROM PYTHON SOURCE LINES 90-96

.. code-block:: default

    test2d = WP2(bc3, comp, nstep=100, left='free', right='free')
    test2d.plot('2b_reduc')
    # test2dv = WP2(bc3, comp, nstep=100, left='free', right='free', Vinit=10)
    # test2dv.plot('2bdimiv')
    test2d.plotInterface(figname='interf')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_016.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_016.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_017.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_017.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_018.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_018.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_019.png
         :alt: x = 0 m
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_019.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:397: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      ax1 = plt.subplot(nsbp, 1, 1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:404: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 2, sharex=ax1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:411: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 3, sharex=ax1)




.. GENERATED FROM PYTHON SOURCE LINES 97-107

First bar with initial velocity
-------------------------------
Positive velocity: compression
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
As the first bar (=stricker) impacts the second bar, a compression pulse 
develops in both bars. The stricker being shorter that the second bar, the 
compression pulse reaches the left end of the stricker and is reflected as 
traction with the same magnitude as the compression pulse: traction cancels
compression and the force is null (traction can be considered as an unloading
wave).

.. GENERATED FROM PYTHON SOURCE LINES 107-110

.. code-block:: default

    test2v = WP2(bc4, comp, nstep=100, left='free', right='free', Vinit=10)
    test2v.plot('2b_veloc')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_020.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_020.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_021.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_021.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_022.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_022.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting initial velocity of first segment (Vo=10)




.. GENERATED FROM PYTHON SOURCE LINES 111-114

Negative velocity
^^^^^^^^^^^^^^^^^
Nothing happens, the left bar travels to the left.

.. GENERATED FROM PYTHON SOURCE LINES 114-116

.. code-block:: default

    test2vn = WP2(bc4, comp, nstep=100, left='free', right='free', Vinit=-10)
    test2vn.plot('2b_negveloc')



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_023.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_023.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_024.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_024.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_1_WP2_025.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_1_WP2_025.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting initial velocity of first segment (Vo=-10)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.021 seconds)


.. _sphx_glr_download_auto_examples_plot_1_WP2.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_1_WP2.py <plot_1_WP2.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_1_WP2.ipynb <plot_1_WP2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
