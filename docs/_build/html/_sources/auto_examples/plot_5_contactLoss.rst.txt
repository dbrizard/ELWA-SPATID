
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_5_contactLoss.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_5_contactLoss.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_5_contactLoss.py:


Displacement and contact loss
=============================
This example illustrates the loss of contact when two bars in contact do not
have the same impedance. 
 

.. GENERATED FROM PYTHON SOURCE LINES 10-24

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    from elwaspatid import Waveprop, WP2, Barhomo, Barhete 
    plt.close('all')

    E = 210e9  # [MPa]
    rho = 7800  # [kg/m3]
    L = 1  # [m]
    d = 0.02  # [m]

    incw = np.zeros(80)  # incident wave
    incw[0:20] = 1  # /!\ traction pulse








.. GENERATED FROM PYTHON SOURCE LINES 25-31

Small impedance against large impedance
---------------------------------------
The impacting bar stays in contact with the right bar during one back-and-forth
travel of the compression wave in it. Then contact ceases and the left bar
strarts travelling to the left.
A Heaviside compression pulse travels down the right bar.

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: default

    L = 1  # [m]
    bar = Barhete([E, E], [rho, rho], [L, 0.5*L], [d, 2*d], nmin=6)
    testk = WP2(bar, left='free', right='infinite', Vinit=5)
    testk.plot()
    testk.plotInterface(0, 'interface')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_001.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_002.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_003.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_004.png
         :alt: x = 0 m
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Simulation time set to 2 travels across all bars.
    Setting initial velocity of first segment (Vo=5)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:397: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      ax1 = plt.subplot(nsbp, 1, 1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:404: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 2, sharex=ax1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:411: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 3, sharex=ax1)




.. GENERATED FROM PYTHON SOURCE LINES 38-44

Large impedance against small impedance
---------------------------------------
In that case, the impacting bar stays in contact indefinitly with the right
bar and a "stair" compression pulse develops in the right bar, with steps of
decreasing amplitude.
See also :ref:`sphx_glr_auto_examples_plot_2_ElasticImpact.py`

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: default

    bar = Barhete([E, E], [rho, rho], [L, L], [d, 0.5*d], nmin=6)
    testl = WP2(bar, nstep=150, left='free', right='infinite', Vinit=5)
    testl.plot()

    testl.plotInterface(0, 'interface2')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_005.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_006.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_007.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_008.png
         :alt: x = 0 m
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_008.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting initial velocity of first segment (Vo=5)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:397: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      ax1 = plt.subplot(nsbp, 1, 1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:404: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 2, sharex=ax1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:411: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 3, sharex=ax1)




.. GENERATED FROM PYTHON SOURCE LINES 51-57

Contact loss detection
----------------------
**Why contact loss detection is useless??**

Second bar with section increase
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: default

    bar = Barhete([E, E], [rho, rho], [.2*L, L], [.8*d, d], nmin=12)
    bar.changeSection(iseg=1, l=L/4, d=2*d)
    bar.changeSection(iseg=1, l=L/2, d=4*d)
    bar.plotProperties('Z')




.. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_009.png
   :alt: plot 5 contactLoss
   :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_009.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Markers and step positions are not precise yet...
    Markers and step positions are not precise yet...




.. GENERATED FROM PYTHON SOURCE LINES 63-66

No contact loss
^^^^^^^^^^^^^^^


.. GENERATED FROM PYTHON SOURCE LINES 66-71

.. code-block:: default

    testm = WP2(bar, nstep=150, left='free', right='infinite', Vinit=5, contactLoss=None)
    testm.plot()
    testm.plotInterface(0, 'NoCL')
    print(testm.contact)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_010.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_011.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_012.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_012.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_013.png
         :alt: x = 0 m
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_013.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting initial velocity of first segment (Vo=5)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:397: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      ax1 = plt.subplot(nsbp, 1, 1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:404: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 2, sharex=ax1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:411: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 3, sharex=ax1)
    {'state': [], 'threshold': None}




.. GENERATED FROM PYTHON SOURCE LINES 72-75

Contact loss
^^^^^^^^^^^^


.. GENERATED FROM PYTHON SOURCE LINES 75-79

.. code-block:: default

    testc = WP2(bar, -incw, nstep=150, left='free', right='infinite', Vinit=0, contactLoss=1e-9)
    testc.plot()
    testc.plotInterface(0, 'CL')
    print(testc.contact)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_014.png
         :alt: Force [N]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_015.png
         :alt: Velocity [m/s]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_015.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_016.png
         :alt: Displacement [m]
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_016.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_5_contactLoss_017.png
         :alt: x = 0 m
         :srcset: /auto_examples/images/sphx_glr_plot_5_contactLoss_017.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:397: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      ax1 = plt.subplot(nsbp, 1, 1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:404: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 2, sharex=ax1)
    /home/dbrizard/Miscellaneous/prop1d/src/elwaspatid/elwaspatid.py:411: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      plt.subplot(nsbp, 1, 3, sharex=ax1)
    {'state': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'threshold': 1e-09}





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.212 seconds)


.. _sphx_glr_download_auto_examples_plot_5_contactLoss.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_5_contactLoss.py <plot_5_contactLoss.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_5_contactLoss.ipynb <plot_5_contactLoss.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
